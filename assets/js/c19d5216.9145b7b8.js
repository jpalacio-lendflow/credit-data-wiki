"use strict";(self.webpackChunkcredit_data_wiki=self.webpackChunkcredit_data_wiki||[]).push([[4722],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),d=i,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3028:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],l={title:"Watchlist Premium",sidebar_position:4},s=void 0,u={unversionedId:"kyc/socure/watchlist-premium",id:"kyc/socure/watchlist-premium",title:"Watchlist Premium",description:"Includes all lists in the Plus tier, and adds more than 4500 trusted Adverse Media sources.",source:"@site/docs/kyc/socure/watchlist-premium.md",sourceDirName:"kyc/socure",slug:"/kyc/socure/watchlist-premium",permalink:"/credit-data-wiki/kyc/socure/watchlist-premium",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Watchlist Premium",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Watchlist Plus",permalink:"/credit-data-wiki/kyc/socure/watchlist-plus"},next:{title:"Prefill",permalink:"/credit-data-wiki/kyc/socure/prefill"}},c=[],p={toc:c};function m(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Includes all lists in the Plus tier, and adds more than 4500 trusted Adverse Media sources."),(0,a.kt)("p",null,"Data"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"First Name")," - Required. The user\u2019s first name or given name"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Last Name")," - Required. The user\u2019s surname, for example"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Email")," - Optional. The user's email address. Must conform to RFC 5322 standards and contain a valid top-level domain"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Country")," - Required. The user\u2019s country of residence in valid two-letter ISO 3166-1 alpha-2 format"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Physical Address")," - Conditional. The user\u2019s physical address in valid USPS format"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"City")," - Conditional. The user\u2019s city of residence in valid USPS format"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"State")," - Conditional. The user\u2019s state of residence in valid ISO 3166-2:US format"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Zip Code")," - Conditional. The user\u2019s five-digit ZIP code in valid USPS format"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Mobile Number")," - Optional. The user's phone number in the E.164 standard, for example, +12015551234 or +1-201-555-1234. A mobile phone number is preferred. The Socure API supports US numbers only"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"National ID")," - Conditional. The full nine digit or last four digits of a user's national ID number. Hyphens are optional. The Socure API accepts U.S. Social Security Numbers and U.S. Tax Identification Numbers."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"DOB")," - Conditional. The user's date of birth conforming to ISO 8601 date standards"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"User Consent")," - Optional. Indicates if the user has provided consent for verification. userConsent is required and must be set to true when implicitly calling eCBSV with the KYC module.")))}m.isMDXComponent=!0}}]);